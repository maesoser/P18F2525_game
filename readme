Step 2: Reading the matrix keyboard

In this second session one should implement a keyboard decoder to detect which key has been pressed. Key- debouncing should be taking into account to
correctly detect the stroked key. Annex 2 describes the way the keyboard works and describes the procedure to implement the reading method.
To control this procedure, a 7-segment display should be connected to the microcontroller ports. Each time a keystroke is detected the display will indicate the number/letter that represents the pressed key. This display will shine until a new key is pressed. It is recommended to use a BCD to 7 segment decoder (74LS47 is a good example) in order to simplify this step.

Previous work:
o Flux diagram of the program including the keyboard routine, thedebouncing routine and the decoding of the pressed key.
o Flux diagram of the main program including the visualization of the pressed key as the result of the keyboard pressing.

Laboratory work:
o Identify the pressed key on the matrix keyboard, avoiding possible bouncing and solving all existing problems with the debugging functions.
o Visualize the correspondent number/letter in the 7-segment display, verifying all of the possible cases.

Step 3: Complete game without sounds.

The idea of the third step is to implement the full system without including the sound reproduction function. The generation of the random sequences, the visualization of them and the interpretation of the pressed keys are the base of the program to be completed in this session.
The game will have an start mode to be determined by the programmer (pressing a key, after a few seconds, after playing some initial music, etc), after this, a first random value will be shown for the player to replicate in a short time span (<10 seconds) between key strokes. After the player presses the key a new increased sequence will be shown if the pressed key is correct, or will show an error visualization sequence for the case the pressed key is incorrect or the player took a long time to press the key.


Previous work:
o Flux diagram of the complete game where each routine shall be clearly specified according to its function.
o Description of the initial mode of the game, and also the process to show the player he/she has failed when introducing the sequence.

Laboratory work:
o Consolidate the full game, verifying the debouncing function of the keyboard and taking into account the time between the multiple actions of the game.
o Use the debug environment of the MPLAB software in order to correct any errors in your program.